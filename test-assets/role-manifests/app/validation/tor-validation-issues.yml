# This role manifest is used to check that various validation issues are found
---
expected_errors:
# checkForUndefinedBOSHProperties light
- "light opinion 'tor.opinion': Not found: \"In any BOSH release\""
- "light opinion 'tor.int_opinion': Not found: \"In any BOSH release\""
- "light opinion 'tor.masked_opinion': Not found: \"In any BOSH release\""
# checkForUndefinedBOSHProperties dark
- "dark opinion 'tor.dark-opinion': Not found: \"In any BOSH release\""
- "dark opinion 'tor.masked_opinion': Not found: \"In any BOSH release\""
# checkForUndefinedBOSHProperties manifest
- "role-manifest 'fox': Not found: \"In any BOSH release\""
# checkForUntemplatedDarkOpinions
- "properties.tor.dark-opinion: Not found: \"Dark opinion is missing template in role-manifest\""
- "properties.tor.masked_opinion: Not found: \"Dark opinion is missing template in role-manifest\""
# checkForDarkInTheLight
- "properties.tor.masked_opinion: Forbidden: Dark opinion found in light opinions"
# checkForDuplicatesBetweenManifestAndLight
- "configuration.templates[properties.tor.hostname]: Forbidden: Role-manifest overrides opinion, remove opinion"
- "instance-groups[myrole].configuration.templates[properties.tor.bogus]: Forbidden: Role-manifest duplicates opinion, remove from manifest"
# checkForUndefinedBOSHProperties light, manifest - For the bogus property used above for checkOverridden
- "role-manifest 'tor.bogus': Not found: \"In any BOSH release\""
- "light opinion 'tor.bogus': Not found: \"In any BOSH release\""
- "properties.tor.hostname: Forbidden: Light opinion matches default of 'localhost'"
light_opinions:
  properties:
    tor:
      opinion: this is an opinion
      int_opinion: 31
      masked_opinion: 'some value'
      hostname: localhost
      bogus: BOGUS
dark_opinions:
  properties:
    tor:
      dark-opinion: this is a dark opinion
      masked_opinion: masked
instance_groups:
- name: myrole
  scripts:
  - scripts/myrole.sh
  jobs:
  - name: new_hostname
    release: tor
    properties:
      bosh_containerization:
        run:
          foo: x
  - name: tor
    release: tor
  configuration:
    templates:
      properties.tor.bogus: BOGUS
- name: foorole
  type: bosh-task
  jobs:
  - name: tor
    release: tor
    properties:
      bosh_containerization:
        run:
          foo: x
configuration:
  templates:
    properties.fox: '((FOO): Not specified in any release'
    properties.tor.hashed_control_password: '((={{ }}=)){{PELERINUL}}'
    properties.tor.hostname: '((FOO))'
    properties.tor.private_key: '((#BAR))((HOME))((/BAR))'
variables:
- name: BAR
  options:
    description: "foo"
- name: FOO
  options:
    description: "foo"
- name: HOME
  options:
    description: "foo"
- name: PELERINUL
  options:
    description: "foo"
